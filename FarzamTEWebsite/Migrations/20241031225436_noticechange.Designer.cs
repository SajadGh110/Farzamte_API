// <auto-generated />
using System;
using FarzamTEWebsite.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FarzamTEWebsite.Migrations
{
    [DbContext(typeof(FarzamDbContext))]
    [Migration("20241031225436_noticechange")]
    partial class noticechange
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FarzamTEWebsite.Models.Brokerage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brokerages");
                });

            modelBuilder.Entity("FarzamTEWebsite.Models.CaseReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Broker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CaseResolutionCreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CaseResolutionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseResolutionSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseResolutionsolver")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("caseAutoNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("casetype")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdon")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("owner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phonecallReason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phonecallReasonsDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("statuscode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CaseReports");
                });

            modelBuilder.Entity("FarzamTEWebsite.Models.HappyCall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Broker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CallFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CallTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChoosingBrokerage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerRequirement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerRequirement1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerRequirement2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerRequirement3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerRequirementDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerRequirementDesc1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerRequirementDesc2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerRequirementDesc3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ExplanationClub")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RegDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TotalTradeAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TradeStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TradeStatusAffter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserRequest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("checkingPanel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdon")
                        .HasColumnType("datetime2");

                    b.Property<string>("introduction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nationalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phonenumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("statusReason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("totalBrokerCommission")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HappyCalls");
                });

            modelBuilder.Entity("FarzamTEWebsite.Models.InComingCall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Broker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("automationid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdon")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("from")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phonecallreason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phonecallreason2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phonecallreason3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phonecallreasondetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phonecallreasondetail2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phonecallreasondetail3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phonenumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("to")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InComingCalls");
                });

            modelBuilder.Entity("FarzamTEWebsite.Models.Notice_Call", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Broker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdon")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("expert")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("noticeid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("noticetype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("statusReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("symbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("typeofcapitalincrease")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Notice_Call");
                });

            modelBuilder.Entity("FarzamTEWebsite.Models.Notice_SMS", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Broker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("expert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("modifiedon")
                        .HasColumnType("datetime2");

                    b.Property<string>("noticeid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("noticetype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("response_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("symbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("typeofcapitalincrease")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Notice_SMS");
                });

            modelBuilder.Entity("FarzamTEWebsite.Models.TTS_Reason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("TransportToSmartId")
                        .HasColumnType("int");

                    b.Property<int?>("TransportToSmartId1")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TransportToSmartId");

                    b.HasIndex("TransportToSmartId1");

                    b.ToTable("TTS_Reasons");
                });

            modelBuilder.Entity("FarzamTEWebsite.Models.Transaction_Statistics_M", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("All_Total_Value")
                        .HasColumnType("int");

                    b.Property<int?>("BEI_Moshtaghe")
                        .HasColumnType("int");

                    b.Property<int?>("BEI_Other")
                        .HasColumnType("int");

                    b.Property<int?>("BEI_Physical")
                        .HasColumnType("int");

                    b.Property<int?>("BEI_Total_Value")
                        .HasColumnType("int");

                    b.Property<int?>("BKI_Ati")
                        .HasColumnType("int");

                    b.Property<int?>("BKI_Ekhtiar")
                        .HasColumnType("int");

                    b.Property<int?>("BKI_Physical")
                        .HasColumnType("int");

                    b.Property<int?>("BKI_Self")
                        .HasColumnType("int");

                    b.Property<int?>("BKI_Total_Value")
                        .HasColumnType("int");

                    b.Property<int?>("BOBT_AND_FI_Total_Value")
                        .HasColumnType("int");

                    b.Property<int?>("BOBT_Moshtaghe_Normal")
                        .HasColumnType("int");

                    b.Property<int?>("BOBT_Moshtaghe_Online")
                        .HasColumnType("int");

                    b.Property<int?>("BOBT_Oragh_Bedehi_Normal")
                        .HasColumnType("int");

                    b.Property<int?>("BOBT_Oragh_Bedehi_Online")
                        .HasColumnType("int");

                    b.Property<int?>("BOBT_Sarmaye_Herfei_Algorithm")
                        .HasColumnType("int");

                    b.Property<int?>("BOBT_Sarmaye_Herfei_Normal")
                        .HasColumnType("int");

                    b.Property<int?>("BOBT_Sarmaye_Herfei_Online")
                        .HasColumnType("int");

                    b.Property<int?>("BOBT_Total_Value")
                        .HasColumnType("int");

                    b.Property<int?>("BOBT_saham_Algorithm")
                        .HasColumnType("int");

                    b.Property<int?>("BOBT_saham_Normal")
                        .HasColumnType("int");

                    b.Property<int?>("BOBT_saham_Online")
                        .HasColumnType("int");

                    b.Property<int>("Brokerage_ID")
                        .HasColumnType("int");

                    b.Property<string>("Date_Monthly")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FI_Brokerage_Station")
                        .HasColumnType("int");

                    b.Property<int?>("FI_Online_Group")
                        .HasColumnType("int");

                    b.Property<int?>("FI_Online_Normal")
                        .HasColumnType("int");

                    b.Property<int?>("FI_Online_Other")
                        .HasColumnType("int");

                    b.Property<int?>("FI_Total_Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Transaction_Statistics_M");
                });

            modelBuilder.Entity("FarzamTEWebsite.Models.TransportToSmart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Broker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdon")
                        .HasColumnType("datetime2");

                    b.Property<string>("customerSatisfaction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("from")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nationalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phonenumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resultOfCall")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("to")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TransportsToSmart");
                });

            modelBuilder.Entity("FarzamTEWebsite.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Broker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Brokerage_ID")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FarzamTEWebsite.Models.TTS_Reason", b =>
                {
                    b.HasOne("FarzamTEWebsite.Models.TransportToSmart", null)
                        .WithMany("reasonOfContinueSmart")
                        .HasForeignKey("TransportToSmartId");

                    b.HasOne("FarzamTEWebsite.Models.TransportToSmart", null)
                        .WithMany("reasonOfReturnTadbir")
                        .HasForeignKey("TransportToSmartId1");
                });

            modelBuilder.Entity("FarzamTEWebsite.Models.TransportToSmart", b =>
                {
                    b.Navigation("reasonOfContinueSmart");

                    b.Navigation("reasonOfReturnTadbir");
                });
#pragma warning restore 612, 618
        }
    }
}
